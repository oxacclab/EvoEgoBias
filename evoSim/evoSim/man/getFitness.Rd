% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evoSim.R
\name{getFitness}
\alias{getFitness}
\title{Calculate the cumulative fitness (higher is better) for each agent based on
the current decision}
\usage{
getFitness(modelParams, agents, world, ties)
}
\arguments{
\item{modelParams}{parameters for the model as a named list}

\item{agents}{data.frame of agents}

\item{world}{list of world properties (\code{state} obtained from
\code{\link{getWorldState}}, and \code{generation}, and \code{decision}
numbers.)}

\item{ties}{square matrix of connections between agents}
}
\value{
an updated version of the \code{agents} data frame with updated fitness values
}
\description{
Agent's fitness is \code{agents$fitness[i]-1} if incorrect,
  otherwise unchanged. Negative values are used so that higher fitness is
  better, but the actual value tracked can be thought of as an error score.
  This allows for arbitrarily high error values (low fitness scores) while
  still keeping the intuitive label 'fitness'.
}
